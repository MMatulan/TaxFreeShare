@page "/dashboardKjøper"
@using Blazored.LocalStorage
@using TaxFreeShareFrontend3.Services
@using TaxFreeShareFrontend3.Models.DTO
@inject ILocalStorageService LocalStorage
@inject UserService UserService
@inject ProductService ProductService
@inject OrderService OrderService

<PageTitle>Dashboard for kjøpere</PageTitle>

<div class="d-flex">
    <!-- Sidebar -->
    <div class="bg-dark text-white p-4" style="width: 250px; min-height: 100vh;">
        <h4 class="fw-bold mb-4">TaxFreeShare</h4>
        <ul class="nav flex-column">
            <li class="nav-item mb-2">
                <a class="nav-link text-white" href="dashboardKjøper">Oversikt</a>
            </li>
            <li class="nav-item mb-2">
                <a class="nav-link text-white" href="mine-bestillinger">Mine bestillinger</a>
            </li>
        </ul>
    </div>

    <!-- Main Content -->
    <main class="flex-grow-1 p-5">
        <h2 class="fw-bold">Hei, @UserName!</h2>

        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <div class="alert alert-danger mt-3">@ErrorMessage</div>
        }
        @if (!string.IsNullOrEmpty(SuccessMessage))
        {
            <div class="alert alert-success mt-3">@SuccessMessage</div>
        }

        <div class="alert alert-info d-flex align-items-center mt-3" role="alert">
            <i class="bi bi-bell me-2"></i>
            Du har 2 nye meldinger
        </div>

        <div class="mt-4">
            <h4 class="mb-3">Mine bestillinger</h4>

            <!-- Bestillingsliste kan implementeres her -->

            <!-- Legg til ny bestilling -->
            <div class="mt-4">
                <button class="btn btn-primary w-100" @onclick="OpenModal">Legg til ny bestilling</button>
            </div>
        </div>
    </main>
</div>

<!-- Dialogboks -->
@if (ShowModal)
{
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Ny bestilling</h5>
                    <button type="button" class="btn-close" @onclick="CloseModal"></button>
                </div>
                <div class="modal-body">
                    <label for="productSelect">Velg et produkt:</label>
                    <select id="productSelect" class="form-select" @bind="SelectedProductId">
                        <option value="">-- Velg --</option>
                        @foreach (var product in Products)
                        {
                            <option value="@product.Id">@product.Name (@product.Brand)</option>
                        }
                    </select>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="CloseModal">Avbryt</button>
                    <button class="btn btn-primary" @onclick="SubmitOrder">Bestill</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private string UserName = "";
    private bool ShowModal = false;
    private List<ProductDto> Products = new();
    private int? SelectedProductId;
    private string ErrorMessage = "";
    private string SuccessMessage = "";

    protected override async Task OnInitializedAsync()
    {
        var userIdString = await LocalStorage.GetItemAsync<string>("userId");
        if (int.TryParse(userIdString, out var userId))
        {
            var user = await UserService.GetUserByIdAsync(userId);
            if (user is not null)
            {
                UserName = user.Name;
            }
        }

        Products = await ProductService.GetProductsAsync();
    }

    private void OpenModal()
    {
        ShowModal = true;
        ErrorMessage = "";
        SuccessMessage = "";
    }

    private void CloseModal()
    {
        ShowModal = false;
        SelectedProductId = null;
    }

    private async Task SubmitOrder()
    {
        ErrorMessage = "";
        SuccessMessage = "";

        if (SelectedProductId is not null)
        {
            var order = new CreateOrderDto
            {
                OrderItems = new List<OrderItemDto>
                {
                    new OrderItemDto
                    {
                        ProductId = SelectedProductId.Value,
                        Quantity = 1
                    }
                }
            };

            var success = await OrderService.CreateOrderAsync(order);

            if (success)
            {
                SuccessMessage = "Bestillingen ble sendt!";
                CloseModal();
            }
            else
            {
                ErrorMessage = "Noe gikk galt ved sending av bestilling.";
            }
        }
        else
        {
            ErrorMessage = "Du må velge et produkt.";
        }
    }
}
